name: Flutter Mobile Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Install Flutter SDK
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.2'

      # Clean Flutter project
      - name: Clean Flutter Project
        run: flutter clean
        working-directory: ./budgy_app

      # Install dependencies
      - name: Install dependencies
        run: flutter pub get
        working-directory: ./budgy_app

      # Format Dart files
      - name: Format Dart files
        run: dart format --set-exit-if-changed . || true
        working-directory: ./budgy_app

      # Analyze project source
      - name: Analyze project source
        run: flutter analyze
        working-directory: ./budgy_app

      # Build APK for Android (with missing rules output if fails)
      - name: Build Android APK
        run: |
          set -e
          if ! flutter build apk --release; then
            echo "------ R8 Missing Rules Output ------"
            MISSING_RULES_FILE="budgy_app/build/app/outputs/mapping/release/missing_rules.txt"
            if [ -f "$MISSING_RULES_FILE" ]; then
              cat "$MISSING_RULES_FILE"
            else
              echo "No missing_rules.txt file found."
            fi
            exit 1
          fi
        working-directory: ./budgy_app

      # Delete existing release if it exists
      - name: Delete Existing Release
        run: |
          gh release delete v0.0.1 -y || echo "Release does not exist, continuing..."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v0.0.1
          release_name: "Release v0.0.1"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload APK to Release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: budgy_app/build/app/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
